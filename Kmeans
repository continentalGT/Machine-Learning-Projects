{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "d6485d73",
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import numpy as np \n",
    "import matplotlib.pyplot as plt\n",
    "import seaborn as sns"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 75,
   "id": "12a0858f",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>V1</th>\n",
       "      <th>V2</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>2.072345</td>\n",
       "      <td>-3.241693</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>17.936710</td>\n",
       "      <td>15.784810</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1.083576</td>\n",
       "      <td>7.319176</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>11.120670</td>\n",
       "      <td>14.406780</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>23.711550</td>\n",
       "      <td>2.557729</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "          V1         V2\n",
       "0   2.072345  -3.241693\n",
       "1  17.936710  15.784810\n",
       "2   1.083576   7.319176\n",
       "3  11.120670  14.406780\n",
       "4  23.711550   2.557729"
      ]
     },
     "execution_count": 75,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "d=pd.read_excel(r'C:\\Users\\esvit\\Downloads\\Downloads\\data science\\intellipat\\data\\Dataset-Kmeans-xclara.csv.xlsx')\n",
    "d.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "afd27505",
   "metadata": {},
   "source": [
    "# Data Preprocessing"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "b0afd9b7",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#duplicate\n",
    "d.duplicated().sum()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "91233d82",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "V1    0\n",
       "V2    0\n",
       "dtype: int64"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#null\n",
    "d.isnull().sum()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "f856d2a2",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 3000 entries, 0 to 2999\n",
      "Data columns (total 2 columns):\n",
      " #   Column  Non-Null Count  Dtype  \n",
      "---  ------  --------------  -----  \n",
      " 0   V1      3000 non-null   float64\n",
      " 1   V2      3000 non-null   float64\n",
      "dtypes: float64(2)\n",
      "memory usage: 47.0 KB\n"
     ]
    }
   ],
   "source": [
    "#format\n",
    "d.info()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "964bcea4",
   "metadata": {},
   "source": [
    "# visualisation"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "85c4538e",
   "metadata": {},
   "outputs": [],
   "source": [
    "import warnings \n",
    "warnings.filterwarnings('ignore')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "3f8d02c7",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>V1</th>\n",
       "      <th>V2</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>3000.000000</td>\n",
       "      <td>3000.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>40.611358</td>\n",
       "      <td>22.862141</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>25.859054</td>\n",
       "      <td>31.759714</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>-22.495990</td>\n",
       "      <td>-38.795500</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>18.462790</td>\n",
       "      <td>-4.003494</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>41.552210</td>\n",
       "      <td>13.827390</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>62.249480</td>\n",
       "      <td>55.729100</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>104.376600</td>\n",
       "      <td>87.313700</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                V1           V2\n",
       "count  3000.000000  3000.000000\n",
       "mean     40.611358    22.862141\n",
       "std      25.859054    31.759714\n",
       "min     -22.495990   -38.795500\n",
       "25%      18.462790    -4.003494\n",
       "50%      41.552210    13.827390\n",
       "75%      62.249480    55.729100\n",
       "max     104.376600    87.313700"
      ]
     },
     "execution_count": 20,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "d.describe()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "4bea0064",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<AxesSubplot:xlabel='V1', ylabel='Count'>"
      ]
     },
     "execution_count": 17,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.histplot(d['V1'],kde=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "8713687f",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<AxesSubplot:xlabel='V2', ylabel='Count'>"
      ]
     },
     "execution_count": 18,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.histplot(d['V2'],kde=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "id": "d73f6fb3",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 720x720 with 4 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "d.plot(kind='box',layout=(2,2),subplots=True,figsize=(10,10))\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "d1a5384a",
   "metadata": {},
   "source": [
    "# MODEL BUILDING"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "cd954668",
   "metadata": {},
   "source": [
    "Modle building without standardization"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "id": "d9d24d2b",
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.cluster import KMeans"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 61,
   "id": "35af377a",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[<matplotlib.lines.Line2D at 0x1e7dfc99d60>]"
      ]
     },
     "execution_count": 61,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "#Elbow method\n",
    "n=list(range(1,10))\n",
    "ssd=[]\n",
    "for i in n:\n",
    "    model=KMeans(n_clusters=i)\n",
    "    model.fit(d)\n",
    "    ssd.append(model.inertia_)\n",
    "plt.plot(n,ssd)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 76,
   "id": "0b7e2461",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([0, 0, 0, ..., 2, 2, 2])"
      ]
     },
     "execution_count": 76,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "kmean=KMeans(n_clusters=3)\n",
    "kmean.fit(d)\n",
    "kmean.labels_"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 77,
   "id": "4362b986",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([0, 0, 0, ..., 2, 2, 2])"
      ]
     },
     "execution_count": 77,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "label=kmean.predict(d)\n",
    "label"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 78,
   "id": "26912e34",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>V1</th>\n",
       "      <th>V2</th>\n",
       "      <th>clusters</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>2.072345</td>\n",
       "      <td>-3.241693</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>17.936710</td>\n",
       "      <td>15.784810</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1.083576</td>\n",
       "      <td>7.319176</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>11.120670</td>\n",
       "      <td>14.406780</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>23.711550</td>\n",
       "      <td>2.557729</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2995</th>\n",
       "      <td>85.652800</td>\n",
       "      <td>-6.461061</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2996</th>\n",
       "      <td>82.770880</td>\n",
       "      <td>-2.373299</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2997</th>\n",
       "      <td>64.465320</td>\n",
       "      <td>-10.501360</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2998</th>\n",
       "      <td>90.722820</td>\n",
       "      <td>-12.255840</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2999</th>\n",
       "      <td>64.879760</td>\n",
       "      <td>-24.877310</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>3000 rows × 3 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "             V1         V2  clusters\n",
       "0      2.072345  -3.241693         0\n",
       "1     17.936710  15.784810         0\n",
       "2      1.083576   7.319176         0\n",
       "3     11.120670  14.406780         0\n",
       "4     23.711550   2.557729         0\n",
       "...         ...        ...       ...\n",
       "2995  85.652800  -6.461061         2\n",
       "2996  82.770880  -2.373299         2\n",
       "2997  64.465320 -10.501360         2\n",
       "2998  90.722820 -12.255840         2\n",
       "2999  64.879760 -24.877310         2\n",
       "\n",
       "[3000 rows x 3 columns]"
      ]
     },
     "execution_count": 78,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "d['clusters']=label\n",
    "d"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 96,
   "id": "bc5b5367",
   "metadata": {},
   "outputs": [],
   "source": [
    "d2=d[d.clusters==2]\n",
    "d1=d[d.clusters==1]\n",
    "d0=d[d.clusters==0]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 102,
   "id": "6996c122",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.scatter(data=d2,x='V1',y='V2',color='red',label='2 clus')\n",
    "plt.scatter(data=d1,x='V1',y='V2',color='yellow',label='1 clus')\n",
    "plt.scatter(data=d0,x='V1',y='V2',color='green',label='0 clus')\n",
    "plt.title('Cluster plot')\n",
    "plt.xlabel('V1',fontsize=10)\n",
    "plt.ylabel('V2',fontsize=10)\n",
    "plt.legend()\n",
    "\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 66,
   "id": "ce3a0c70",
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.metrics import silhouette_score"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 80,
   "id": "fdb5b4ec",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "silhouette_score is 0.6946645950996625\n"
     ]
    }
   ],
   "source": [
    "print('silhouette_score is',silhouette_score(d,label))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "854288bb",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "markdown",
   "id": "dd884234",
   "metadata": {},
   "source": [
    "# model buiding -standardization"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "9c588c57",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>V1</th>\n",
       "      <th>V2</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>2.072345</td>\n",
       "      <td>-3.241693</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>17.936710</td>\n",
       "      <td>15.784810</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1.083576</td>\n",
       "      <td>7.319176</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>11.120670</td>\n",
       "      <td>14.406780</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>23.711550</td>\n",
       "      <td>2.557729</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "          V1         V2\n",
       "0   2.072345  -3.241693\n",
       "1  17.936710  15.784810\n",
       "2   1.083576   7.319176\n",
       "3  11.120670  14.406780\n",
       "4  23.711550   2.557729"
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "d1=pd.read_excel(r'C:\\Users\\esvit\\Downloads\\Downloads\\data science\\intellipat\\data\\Dataset-Kmeans-xclara.csv.xlsx')\n",
    "d1.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "8e508bac",
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.preprocessing import StandardScaler\n",
    "s=StandardScaler()\n",
    "d1_transformed=s.fit_transform(d1)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "94fe64ec",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>V1</th>\n",
       "      <th>V2</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>-1.490597</td>\n",
       "      <td>-0.822054</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>-0.877001</td>\n",
       "      <td>-0.222877</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>-1.528841</td>\n",
       "      <td>-0.489474</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>-1.140630</td>\n",
       "      <td>-0.266274</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>-0.653644</td>\n",
       "      <td>-0.639420</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2995</th>\n",
       "      <td>1.742096</td>\n",
       "      <td>-0.923437</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2996</th>\n",
       "      <td>1.630630</td>\n",
       "      <td>-0.794706</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2997</th>\n",
       "      <td>0.922614</td>\n",
       "      <td>-1.050673</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2998</th>\n",
       "      <td>1.938192</td>\n",
       "      <td>-1.105924</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2999</th>\n",
       "      <td>0.938644</td>\n",
       "      <td>-1.503395</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>3000 rows × 2 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "            V1        V2\n",
       "0    -1.490597 -0.822054\n",
       "1    -0.877001 -0.222877\n",
       "2    -1.528841 -0.489474\n",
       "3    -1.140630 -0.266274\n",
       "4    -0.653644 -0.639420\n",
       "...        ...       ...\n",
       "2995  1.742096 -0.923437\n",
       "2996  1.630630 -0.794706\n",
       "2997  0.922614 -1.050673\n",
       "2998  1.938192 -1.105924\n",
       "2999  0.938644 -1.503395\n",
       "\n",
       "[3000 rows x 2 columns]"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "d1_=pd.DataFrame(d1_transformed,columns=d1.columns)\n",
    "d1_"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "600d8858",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>V1</th>\n",
       "      <th>V2</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>3000.0</td>\n",
       "      <td>3000.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>-0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>-2.4</td>\n",
       "      <td>-1.9</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>-0.9</td>\n",
       "      <td>-0.8</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>0.0</td>\n",
       "      <td>-0.3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>0.8</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>2.5</td>\n",
       "      <td>2.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "           V1      V2\n",
       "count  3000.0  3000.0\n",
       "mean     -0.0     0.0\n",
       "std       1.0     1.0\n",
       "min      -2.4    -1.9\n",
       "25%      -0.9    -0.8\n",
       "50%       0.0    -0.3\n",
       "75%       0.8     1.0\n",
       "max       2.5     2.0"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "np.round(d1_.describe(),1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "45e2731a",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([<AxesSubplot:ylabel='Density'>, <AxesSubplot:ylabel='Density'>],\n",
       "      dtype=object)"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "d1_.plot(kind='kde',subplots=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 52,
   "id": "acd182de",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[<matplotlib.lines.Line2D at 0x1e7dfceaaf0>]"
      ]
     },
     "execution_count": 52,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "#Elbow method\n",
    "n=list(range(1,10))\n",
    "ssd=[]\n",
    "for i in n:\n",
    "    model=KMeans(n_clusters=i)\n",
    "    model.fit(d1_)\n",
    "    ssd.append(model.inertia_)\n",
    "plt.plot(n,ssd)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 53,
   "id": "2e05d2f1",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([2, 2, 2, ..., 1, 1, 1])"
      ]
     },
     "execution_count": 53,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "kmean=KMeans(n_clusters=3)\n",
    "kmean.fit(d1_)\n",
    "kmean.labels_"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 55,
   "id": "9a23e53c",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([2, 2, 2, ..., 1, 1, 1])"
      ]
     },
     "execution_count": 55,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "label=kmean.predict(d1_)\n",
    "label"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 56,
   "id": "f9adea81",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>V1</th>\n",
       "      <th>V2</th>\n",
       "      <th>clusters</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>-1.490597</td>\n",
       "      <td>-0.822054</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>-0.877001</td>\n",
       "      <td>-0.222877</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>-1.528841</td>\n",
       "      <td>-0.489474</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>-1.140630</td>\n",
       "      <td>-0.266274</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>-0.653644</td>\n",
       "      <td>-0.639420</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2995</th>\n",
       "      <td>1.742096</td>\n",
       "      <td>-0.923437</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2996</th>\n",
       "      <td>1.630630</td>\n",
       "      <td>-0.794706</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2997</th>\n",
       "      <td>0.922614</td>\n",
       "      <td>-1.050673</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2998</th>\n",
       "      <td>1.938192</td>\n",
       "      <td>-1.105924</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2999</th>\n",
       "      <td>0.938644</td>\n",
       "      <td>-1.503395</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>3000 rows × 3 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "            V1        V2  clusters\n",
       "0    -1.490597 -0.822054         2\n",
       "1    -0.877001 -0.222877         2\n",
       "2    -1.528841 -0.489474         2\n",
       "3    -1.140630 -0.266274         2\n",
       "4    -0.653644 -0.639420         2\n",
       "...        ...       ...       ...\n",
       "2995  1.742096 -0.923437         1\n",
       "2996  1.630630 -0.794706         1\n",
       "2997  0.922614 -1.050673         1\n",
       "2998  1.938192 -1.105924         1\n",
       "2999  0.938644 -1.503395         1\n",
       "\n",
       "[3000 rows x 3 columns]"
      ]
     },
     "execution_count": 56,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "d1_['clusters']=label\n",
    "d1_"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 94,
   "id": "1d6046e7",
   "metadata": {},
   "outputs": [],
   "source": [
    "d1_0=d1_[d1_.clusters==0]\n",
    "d1_1=d1_[d1_.clusters==1]\n",
    "d1_2=d1_[d1_.clusters==2]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 103,
   "id": "480da799",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.legend.Legend at 0x1e7e4a08430>"
      ]
     },
     "execution_count": 103,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.scatter(data=d1_0,x='V1',y='V2',color='red',label='0 clus')\n",
    "plt.scatter(data=d1_1,x='V1',y='V2',color='purple',label='1 clus')\n",
    "plt.scatter(data=d1_2,x='V1',y='V2',color='green',label='2 clus')\n",
    "plt.title('Cluster plot')\n",
    "plt.xlabel('V1',fontsize=10)\n",
    "plt.ylabel('V2',fontsize=10)\n",
    "plt.legend()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 58,
   "id": "64b9b24a",
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.metrics import silhouette_score"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 59,
   "id": "e35bce48",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "silhouette_score with std is 0.7547796762976798\n"
     ]
    }
   ],
   "source": [
    "print('silhouette_score with std is',silhouette_score(d1_,label))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "213c1329",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "40e3007c",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.12"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
